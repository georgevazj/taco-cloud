name: Taco Cloud CI
env:
  APP_NAME: "taco-cloud"
  IMAGE_REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
  IMAGE_TAGS: ""
on:
  push:
    branches:
      - main
      - master
      - dev

jobs:
  build-maven:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      - name: Package artifact
        run: mkdir staging && cp target/*.jar staging
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: taco-cloud
          path: staging
          retention-days: 5

  build-docker-and-push:
    runs-on: ubuntu-latest
    needs: build-maven
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: taco-cloud

      - name: Check staging folder
        run: cd staging && ls -lha

      - name: Determine app name
        if: env.APP_NAME == ''
        run: |
          echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

      - name: Determine image tags
        if: env.IMAGE_TAGS == ''
        run: |
          echo "IMAGE_TAGS=${GITHUB_SHA}" | tee -a $GITHUB_ENV

      - name: Build from Dockerfile
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          dockerfiles: |
            ./Dockerfile

      # Docker login is required to push to the image registry.
      - name: Docker login
        run: |
          docker login -u ${{ secrets.IMAGE_REGISTRY_USER }} -p ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Push to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}
          tls-verify: true